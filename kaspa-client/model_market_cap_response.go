/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MarketCapResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketCapResponse{}

// MarketCapResponse struct for MarketCapResponse
type MarketCapResponse struct {
	Marketcap *int32 `json:"marketcap,omitempty"`
}

// NewMarketCapResponse instantiates a new MarketCapResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketCapResponse() *MarketCapResponse {
	this := MarketCapResponse{}
	var marketcap int32 = 12000132
	this.Marketcap = &marketcap
	return &this
}

// NewMarketCapResponseWithDefaults instantiates a new MarketCapResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketCapResponseWithDefaults() *MarketCapResponse {
	this := MarketCapResponse{}
	var marketcap int32 = 12000132
	this.Marketcap = &marketcap
	return &this
}

// GetMarketcap returns the Marketcap field value if set, zero value otherwise.
func (o *MarketCapResponse) GetMarketcap() int32 {
	if o == nil || IsNil(o.Marketcap) {
		var ret int32
		return ret
	}
	return *o.Marketcap
}

// GetMarketcapOk returns a tuple with the Marketcap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketCapResponse) GetMarketcapOk() (*int32, bool) {
	if o == nil || IsNil(o.Marketcap) {
		return nil, false
	}
	return o.Marketcap, true
}

// HasMarketcap returns a boolean if a field has been set.
func (o *MarketCapResponse) HasMarketcap() bool {
	if o != nil && !IsNil(o.Marketcap) {
		return true
	}

	return false
}

// SetMarketcap gets a reference to the given int32 and assigns it to the Marketcap field.
func (o *MarketCapResponse) SetMarketcap(v int32) {
	o.Marketcap = &v
}

func (o MarketCapResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketCapResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Marketcap) {
		toSerialize["marketcap"] = o.Marketcap
	}
	return toSerialize, nil
}

type NullableMarketCapResponse struct {
	value *MarketCapResponse
	isSet bool
}

func (v NullableMarketCapResponse) Get() *MarketCapResponse {
	return v.value
}

func (v *NullableMarketCapResponse) Set(val *MarketCapResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketCapResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketCapResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketCapResponse(val *MarketCapResponse) *NullableMarketCapResponse {
	return &NullableMarketCapResponse{value: val, isSet: true}
}

func (v NullableMarketCapResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketCapResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



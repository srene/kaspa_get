/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExtraModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtraModel{}

// ExtraModel struct for ExtraModel
type ExtraModel struct {
	Color *string `json:"color,omitempty"`
	MinerAddress *string `json:"minerAddress,omitempty"`
	MinerInfo *string `json:"minerInfo,omitempty"`
}

// NewExtraModel instantiates a new ExtraModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtraModel() *ExtraModel {
	this := ExtraModel{}
	return &this
}

// NewExtraModelWithDefaults instantiates a new ExtraModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtraModelWithDefaults() *ExtraModel {
	this := ExtraModel{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ExtraModel) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtraModel) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ExtraModel) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ExtraModel) SetColor(v string) {
	o.Color = &v
}

// GetMinerAddress returns the MinerAddress field value if set, zero value otherwise.
func (o *ExtraModel) GetMinerAddress() string {
	if o == nil || IsNil(o.MinerAddress) {
		var ret string
		return ret
	}
	return *o.MinerAddress
}

// GetMinerAddressOk returns a tuple with the MinerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtraModel) GetMinerAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MinerAddress) {
		return nil, false
	}
	return o.MinerAddress, true
}

// HasMinerAddress returns a boolean if a field has been set.
func (o *ExtraModel) HasMinerAddress() bool {
	if o != nil && !IsNil(o.MinerAddress) {
		return true
	}

	return false
}

// SetMinerAddress gets a reference to the given string and assigns it to the MinerAddress field.
func (o *ExtraModel) SetMinerAddress(v string) {
	o.MinerAddress = &v
}

// GetMinerInfo returns the MinerInfo field value if set, zero value otherwise.
func (o *ExtraModel) GetMinerInfo() string {
	if o == nil || IsNil(o.MinerInfo) {
		var ret string
		return ret
	}
	return *o.MinerInfo
}

// GetMinerInfoOk returns a tuple with the MinerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtraModel) GetMinerInfoOk() (*string, bool) {
	if o == nil || IsNil(o.MinerInfo) {
		return nil, false
	}
	return o.MinerInfo, true
}

// HasMinerInfo returns a boolean if a field has been set.
func (o *ExtraModel) HasMinerInfo() bool {
	if o != nil && !IsNil(o.MinerInfo) {
		return true
	}

	return false
}

// SetMinerInfo gets a reference to the given string and assigns it to the MinerInfo field.
func (o *ExtraModel) SetMinerInfo(v string) {
	o.MinerInfo = &v
}

func (o ExtraModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtraModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.MinerAddress) {
		toSerialize["minerAddress"] = o.MinerAddress
	}
	if !IsNil(o.MinerInfo) {
		toSerialize["minerInfo"] = o.MinerInfo
	}
	return toSerialize, nil
}

type NullableExtraModel struct {
	value *ExtraModel
	isSet bool
}

func (v NullableExtraModel) Get() *ExtraModel {
	return v.value
}

func (v *NullableExtraModel) Set(val *ExtraModel) {
	v.value = val
	v.isSet = true
}

func (v NullableExtraModel) IsSet() bool {
	return v.isSet
}

func (v *NullableExtraModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtraModel(val *ExtraModel) *NullableExtraModel {
	return &NullableExtraModel{value: val, isSet: true}
}

func (v NullableExtraModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtraModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



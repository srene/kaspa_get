/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SubmitTxScriptPublicKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubmitTxScriptPublicKey{}

// SubmitTxScriptPublicKey struct for SubmitTxScriptPublicKey
type SubmitTxScriptPublicKey struct {
	Version int32 `json:"version"`
	ScriptPublicKey string `json:"scriptPublicKey"`
}

type _SubmitTxScriptPublicKey SubmitTxScriptPublicKey

// NewSubmitTxScriptPublicKey instantiates a new SubmitTxScriptPublicKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitTxScriptPublicKey(version int32, scriptPublicKey string) *SubmitTxScriptPublicKey {
	this := SubmitTxScriptPublicKey{}
	this.Version = version
	this.ScriptPublicKey = scriptPublicKey
	return &this
}

// NewSubmitTxScriptPublicKeyWithDefaults instantiates a new SubmitTxScriptPublicKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitTxScriptPublicKeyWithDefaults() *SubmitTxScriptPublicKey {
	this := SubmitTxScriptPublicKey{}
	return &this
}

// GetVersion returns the Version field value
func (o *SubmitTxScriptPublicKey) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *SubmitTxScriptPublicKey) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *SubmitTxScriptPublicKey) SetVersion(v int32) {
	o.Version = v
}

// GetScriptPublicKey returns the ScriptPublicKey field value
func (o *SubmitTxScriptPublicKey) GetScriptPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScriptPublicKey
}

// GetScriptPublicKeyOk returns a tuple with the ScriptPublicKey field value
// and a boolean to check if the value has been set.
func (o *SubmitTxScriptPublicKey) GetScriptPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScriptPublicKey, true
}

// SetScriptPublicKey sets field value
func (o *SubmitTxScriptPublicKey) SetScriptPublicKey(v string) {
	o.ScriptPublicKey = v
}

func (o SubmitTxScriptPublicKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubmitTxScriptPublicKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["scriptPublicKey"] = o.ScriptPublicKey
	return toSerialize, nil
}

func (o *SubmitTxScriptPublicKey) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"scriptPublicKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubmitTxScriptPublicKey := _SubmitTxScriptPublicKey{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubmitTxScriptPublicKey)

	if err != nil {
		return err
	}

	*o = SubmitTxScriptPublicKey(varSubmitTxScriptPublicKey)

	return err
}

type NullableSubmitTxScriptPublicKey struct {
	value *SubmitTxScriptPublicKey
	isSet bool
}

func (v NullableSubmitTxScriptPublicKey) Get() *SubmitTxScriptPublicKey {
	return v.value
}

func (v *NullableSubmitTxScriptPublicKey) Set(val *SubmitTxScriptPublicKey) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitTxScriptPublicKey) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitTxScriptPublicKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitTxScriptPublicKey(val *SubmitTxScriptPublicKey) *NullableSubmitTxScriptPublicKey {
	return &NullableSubmitTxScriptPublicKey{value: val, isSet: true}
}

func (v NullableSubmitTxScriptPublicKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitTxScriptPublicKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



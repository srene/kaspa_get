/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UtxoModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UtxoModel{}

// UtxoModel struct for UtxoModel
type UtxoModel struct {
	Amount *string `json:"amount,omitempty"`
	ScriptPublicKey ScriptPublicKeyModel `json:"scriptPublicKey"`
	BlockDaaScore *string `json:"blockDaaScore,omitempty"`
	IsCoinbase *bool `json:"isCoinbase,omitempty"`
}

type _UtxoModel UtxoModel

// NewUtxoModel instantiates a new UtxoModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUtxoModel(scriptPublicKey ScriptPublicKeyModel) *UtxoModel {
	this := UtxoModel{}
	var amount string = "[11501593788]"
	this.Amount = &amount
	this.ScriptPublicKey = scriptPublicKey
	var blockDaaScore string = "18867232"
	this.BlockDaaScore = &blockDaaScore
	var isCoinbase bool = false
	this.IsCoinbase = &isCoinbase
	return &this
}

// NewUtxoModelWithDefaults instantiates a new UtxoModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUtxoModelWithDefaults() *UtxoModel {
	this := UtxoModel{}
	var amount string = "[11501593788]"
	this.Amount = &amount
	var blockDaaScore string = "18867232"
	this.BlockDaaScore = &blockDaaScore
	var isCoinbase bool = false
	this.IsCoinbase = &isCoinbase
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *UtxoModel) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtxoModel) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *UtxoModel) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *UtxoModel) SetAmount(v string) {
	o.Amount = &v
}

// GetScriptPublicKey returns the ScriptPublicKey field value
func (o *UtxoModel) GetScriptPublicKey() ScriptPublicKeyModel {
	if o == nil {
		var ret ScriptPublicKeyModel
		return ret
	}

	return o.ScriptPublicKey
}

// GetScriptPublicKeyOk returns a tuple with the ScriptPublicKey field value
// and a boolean to check if the value has been set.
func (o *UtxoModel) GetScriptPublicKeyOk() (*ScriptPublicKeyModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScriptPublicKey, true
}

// SetScriptPublicKey sets field value
func (o *UtxoModel) SetScriptPublicKey(v ScriptPublicKeyModel) {
	o.ScriptPublicKey = v
}

// GetBlockDaaScore returns the BlockDaaScore field value if set, zero value otherwise.
func (o *UtxoModel) GetBlockDaaScore() string {
	if o == nil || IsNil(o.BlockDaaScore) {
		var ret string
		return ret
	}
	return *o.BlockDaaScore
}

// GetBlockDaaScoreOk returns a tuple with the BlockDaaScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtxoModel) GetBlockDaaScoreOk() (*string, bool) {
	if o == nil || IsNil(o.BlockDaaScore) {
		return nil, false
	}
	return o.BlockDaaScore, true
}

// HasBlockDaaScore returns a boolean if a field has been set.
func (o *UtxoModel) HasBlockDaaScore() bool {
	if o != nil && !IsNil(o.BlockDaaScore) {
		return true
	}

	return false
}

// SetBlockDaaScore gets a reference to the given string and assigns it to the BlockDaaScore field.
func (o *UtxoModel) SetBlockDaaScore(v string) {
	o.BlockDaaScore = &v
}

// GetIsCoinbase returns the IsCoinbase field value if set, zero value otherwise.
func (o *UtxoModel) GetIsCoinbase() bool {
	if o == nil || IsNil(o.IsCoinbase) {
		var ret bool
		return ret
	}
	return *o.IsCoinbase
}

// GetIsCoinbaseOk returns a tuple with the IsCoinbase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtxoModel) GetIsCoinbaseOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCoinbase) {
		return nil, false
	}
	return o.IsCoinbase, true
}

// HasIsCoinbase returns a boolean if a field has been set.
func (o *UtxoModel) HasIsCoinbase() bool {
	if o != nil && !IsNil(o.IsCoinbase) {
		return true
	}

	return false
}

// SetIsCoinbase gets a reference to the given bool and assigns it to the IsCoinbase field.
func (o *UtxoModel) SetIsCoinbase(v bool) {
	o.IsCoinbase = &v
}

func (o UtxoModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UtxoModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	toSerialize["scriptPublicKey"] = o.ScriptPublicKey
	if !IsNil(o.BlockDaaScore) {
		toSerialize["blockDaaScore"] = o.BlockDaaScore
	}
	if !IsNil(o.IsCoinbase) {
		toSerialize["isCoinbase"] = o.IsCoinbase
	}
	return toSerialize, nil
}

func (o *UtxoModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"scriptPublicKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUtxoModel := _UtxoModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUtxoModel)

	if err != nil {
		return err
	}

	*o = UtxoModel(varUtxoModel)

	return err
}

type NullableUtxoModel struct {
	value *UtxoModel
	isSet bool
}

func (v NullableUtxoModel) Get() *UtxoModel {
	return v.value
}

func (v *NullableUtxoModel) Set(val *UtxoModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUtxoModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUtxoModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUtxoModel(val *UtxoModel) *NullableUtxoModel {
	return &NullableUtxoModel{value: val, isSet: true}
}

func (v NullableUtxoModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUtxoModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



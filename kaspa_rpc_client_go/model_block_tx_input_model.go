/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlockTxInputModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockTxInputModel{}

// BlockTxInputModel struct for BlockTxInputModel
type BlockTxInputModel struct {
	PreviousOutpoint *BlockTxInputPreviousOutpointModel `json:"previousOutpoint,omitempty"`
	SignatureScript *string `json:"signatureScript,omitempty"`
	SigOpCount *int32 `json:"sigOpCount,omitempty"`
	Sequence *int32 `json:"sequence,omitempty"`
}

// NewBlockTxInputModel instantiates a new BlockTxInputModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockTxInputModel() *BlockTxInputModel {
	this := BlockTxInputModel{}
	return &this
}

// NewBlockTxInputModelWithDefaults instantiates a new BlockTxInputModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockTxInputModelWithDefaults() *BlockTxInputModel {
	this := BlockTxInputModel{}
	return &this
}

// GetPreviousOutpoint returns the PreviousOutpoint field value if set, zero value otherwise.
func (o *BlockTxInputModel) GetPreviousOutpoint() BlockTxInputPreviousOutpointModel {
	if o == nil || IsNil(o.PreviousOutpoint) {
		var ret BlockTxInputPreviousOutpointModel
		return ret
	}
	return *o.PreviousOutpoint
}

// GetPreviousOutpointOk returns a tuple with the PreviousOutpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockTxInputModel) GetPreviousOutpointOk() (*BlockTxInputPreviousOutpointModel, bool) {
	if o == nil || IsNil(o.PreviousOutpoint) {
		return nil, false
	}
	return o.PreviousOutpoint, true
}

// HasPreviousOutpoint returns a boolean if a field has been set.
func (o *BlockTxInputModel) HasPreviousOutpoint() bool {
	if o != nil && !IsNil(o.PreviousOutpoint) {
		return true
	}

	return false
}

// SetPreviousOutpoint gets a reference to the given BlockTxInputPreviousOutpointModel and assigns it to the PreviousOutpoint field.
func (o *BlockTxInputModel) SetPreviousOutpoint(v BlockTxInputPreviousOutpointModel) {
	o.PreviousOutpoint = &v
}

// GetSignatureScript returns the SignatureScript field value if set, zero value otherwise.
func (o *BlockTxInputModel) GetSignatureScript() string {
	if o == nil || IsNil(o.SignatureScript) {
		var ret string
		return ret
	}
	return *o.SignatureScript
}

// GetSignatureScriptOk returns a tuple with the SignatureScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockTxInputModel) GetSignatureScriptOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureScript) {
		return nil, false
	}
	return o.SignatureScript, true
}

// HasSignatureScript returns a boolean if a field has been set.
func (o *BlockTxInputModel) HasSignatureScript() bool {
	if o != nil && !IsNil(o.SignatureScript) {
		return true
	}

	return false
}

// SetSignatureScript gets a reference to the given string and assigns it to the SignatureScript field.
func (o *BlockTxInputModel) SetSignatureScript(v string) {
	o.SignatureScript = &v
}

// GetSigOpCount returns the SigOpCount field value if set, zero value otherwise.
func (o *BlockTxInputModel) GetSigOpCount() int32 {
	if o == nil || IsNil(o.SigOpCount) {
		var ret int32
		return ret
	}
	return *o.SigOpCount
}

// GetSigOpCountOk returns a tuple with the SigOpCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockTxInputModel) GetSigOpCountOk() (*int32, bool) {
	if o == nil || IsNil(o.SigOpCount) {
		return nil, false
	}
	return o.SigOpCount, true
}

// HasSigOpCount returns a boolean if a field has been set.
func (o *BlockTxInputModel) HasSigOpCount() bool {
	if o != nil && !IsNil(o.SigOpCount) {
		return true
	}

	return false
}

// SetSigOpCount gets a reference to the given int32 and assigns it to the SigOpCount field.
func (o *BlockTxInputModel) SetSigOpCount(v int32) {
	o.SigOpCount = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *BlockTxInputModel) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockTxInputModel) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *BlockTxInputModel) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *BlockTxInputModel) SetSequence(v int32) {
	o.Sequence = &v
}

func (o BlockTxInputModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockTxInputModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PreviousOutpoint) {
		toSerialize["previousOutpoint"] = o.PreviousOutpoint
	}
	if !IsNil(o.SignatureScript) {
		toSerialize["signatureScript"] = o.SignatureScript
	}
	if !IsNil(o.SigOpCount) {
		toSerialize["sigOpCount"] = o.SigOpCount
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	return toSerialize, nil
}

type NullableBlockTxInputModel struct {
	value *BlockTxInputModel
	isSet bool
}

func (v NullableBlockTxInputModel) Get() *BlockTxInputModel {
	return v.value
}

func (v *NullableBlockTxInputModel) Set(val *BlockTxInputModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockTxInputModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockTxInputModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockTxInputModel(val *BlockTxInputModel) *NullableBlockTxInputModel {
	return &NullableBlockTxInputModel{value: val, isSet: true}
}

func (v NullableBlockTxInputModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockTxInputModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



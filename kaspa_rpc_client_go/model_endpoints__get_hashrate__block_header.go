/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EndpointsGetHashrateBlockHeader type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointsGetHashrateBlockHeader{}

// EndpointsGetHashrateBlockHeader struct for EndpointsGetHashrateBlockHeader
type EndpointsGetHashrateBlockHeader struct {
	Hash *string `json:"hash,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	Difficulty *int32 `json:"difficulty,omitempty"`
	DaaScore *string `json:"daaScore,omitempty"`
	BlueScore *string `json:"blueScore,omitempty"`
}

// NewEndpointsGetHashrateBlockHeader instantiates a new EndpointsGetHashrateBlockHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointsGetHashrateBlockHeader() *EndpointsGetHashrateBlockHeader {
	this := EndpointsGetHashrateBlockHeader{}
	var hash string = "e6641454e16cff4f232b899564eeaa6e480b66069d87bee6a2b2476e63fcd887"
	this.Hash = &hash
	var timestamp string = "1656450648874"
	this.Timestamp = &timestamp
	var difficulty int32 = 1212312312
	this.Difficulty = &difficulty
	var daaScore string = "19984482"
	this.DaaScore = &daaScore
	var blueScore string = "18483232"
	this.BlueScore = &blueScore
	return &this
}

// NewEndpointsGetHashrateBlockHeaderWithDefaults instantiates a new EndpointsGetHashrateBlockHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointsGetHashrateBlockHeaderWithDefaults() *EndpointsGetHashrateBlockHeader {
	this := EndpointsGetHashrateBlockHeader{}
	var hash string = "e6641454e16cff4f232b899564eeaa6e480b66069d87bee6a2b2476e63fcd887"
	this.Hash = &hash
	var timestamp string = "1656450648874"
	this.Timestamp = &timestamp
	var difficulty int32 = 1212312312
	this.Difficulty = &difficulty
	var daaScore string = "19984482"
	this.DaaScore = &daaScore
	var blueScore string = "18483232"
	this.BlueScore = &blueScore
	return &this
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *EndpointsGetHashrateBlockHeader) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointsGetHashrateBlockHeader) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *EndpointsGetHashrateBlockHeader) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *EndpointsGetHashrateBlockHeader) SetHash(v string) {
	o.Hash = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *EndpointsGetHashrateBlockHeader) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointsGetHashrateBlockHeader) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *EndpointsGetHashrateBlockHeader) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *EndpointsGetHashrateBlockHeader) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetDifficulty returns the Difficulty field value if set, zero value otherwise.
func (o *EndpointsGetHashrateBlockHeader) GetDifficulty() int32 {
	if o == nil || IsNil(o.Difficulty) {
		var ret int32
		return ret
	}
	return *o.Difficulty
}

// GetDifficultyOk returns a tuple with the Difficulty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointsGetHashrateBlockHeader) GetDifficultyOk() (*int32, bool) {
	if o == nil || IsNil(o.Difficulty) {
		return nil, false
	}
	return o.Difficulty, true
}

// HasDifficulty returns a boolean if a field has been set.
func (o *EndpointsGetHashrateBlockHeader) HasDifficulty() bool {
	if o != nil && !IsNil(o.Difficulty) {
		return true
	}

	return false
}

// SetDifficulty gets a reference to the given int32 and assigns it to the Difficulty field.
func (o *EndpointsGetHashrateBlockHeader) SetDifficulty(v int32) {
	o.Difficulty = &v
}

// GetDaaScore returns the DaaScore field value if set, zero value otherwise.
func (o *EndpointsGetHashrateBlockHeader) GetDaaScore() string {
	if o == nil || IsNil(o.DaaScore) {
		var ret string
		return ret
	}
	return *o.DaaScore
}

// GetDaaScoreOk returns a tuple with the DaaScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointsGetHashrateBlockHeader) GetDaaScoreOk() (*string, bool) {
	if o == nil || IsNil(o.DaaScore) {
		return nil, false
	}
	return o.DaaScore, true
}

// HasDaaScore returns a boolean if a field has been set.
func (o *EndpointsGetHashrateBlockHeader) HasDaaScore() bool {
	if o != nil && !IsNil(o.DaaScore) {
		return true
	}

	return false
}

// SetDaaScore gets a reference to the given string and assigns it to the DaaScore field.
func (o *EndpointsGetHashrateBlockHeader) SetDaaScore(v string) {
	o.DaaScore = &v
}

// GetBlueScore returns the BlueScore field value if set, zero value otherwise.
func (o *EndpointsGetHashrateBlockHeader) GetBlueScore() string {
	if o == nil || IsNil(o.BlueScore) {
		var ret string
		return ret
	}
	return *o.BlueScore
}

// GetBlueScoreOk returns a tuple with the BlueScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointsGetHashrateBlockHeader) GetBlueScoreOk() (*string, bool) {
	if o == nil || IsNil(o.BlueScore) {
		return nil, false
	}
	return o.BlueScore, true
}

// HasBlueScore returns a boolean if a field has been set.
func (o *EndpointsGetHashrateBlockHeader) HasBlueScore() bool {
	if o != nil && !IsNil(o.BlueScore) {
		return true
	}

	return false
}

// SetBlueScore gets a reference to the given string and assigns it to the BlueScore field.
func (o *EndpointsGetHashrateBlockHeader) SetBlueScore(v string) {
	o.BlueScore = &v
}

func (o EndpointsGetHashrateBlockHeader) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointsGetHashrateBlockHeader) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Difficulty) {
		toSerialize["difficulty"] = o.Difficulty
	}
	if !IsNil(o.DaaScore) {
		toSerialize["daaScore"] = o.DaaScore
	}
	if !IsNil(o.BlueScore) {
		toSerialize["blueScore"] = o.BlueScore
	}
	return toSerialize, nil
}

type NullableEndpointsGetHashrateBlockHeader struct {
	value *EndpointsGetHashrateBlockHeader
	isSet bool
}

func (v NullableEndpointsGetHashrateBlockHeader) Get() *EndpointsGetHashrateBlockHeader {
	return v.value
}

func (v *NullableEndpointsGetHashrateBlockHeader) Set(val *EndpointsGetHashrateBlockHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointsGetHashrateBlockHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointsGetHashrateBlockHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointsGetHashrateBlockHeader(val *EndpointsGetHashrateBlockHeader) *NullableEndpointsGetHashrateBlockHeader {
	return &NullableEndpointsGetHashrateBlockHeader{value: val, isSet: true}
}

func (v NullableEndpointsGetHashrateBlockHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointsGetHashrateBlockHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



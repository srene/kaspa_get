/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OutpointModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutpointModel{}

// OutpointModel struct for OutpointModel
type OutpointModel struct {
	TransactionId *string `json:"transactionId,omitempty"`
	Index *int32 `json:"index,omitempty"`
}

// NewOutpointModel instantiates a new OutpointModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutpointModel() *OutpointModel {
	this := OutpointModel{}
	var transactionId string = "ef62efbc2825d3ef9ec1cf9b80506876ac077b64b11a39c8ef5e028415444dc9"
	this.TransactionId = &transactionId
	var index int32 = 0
	this.Index = &index
	return &this
}

// NewOutpointModelWithDefaults instantiates a new OutpointModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutpointModelWithDefaults() *OutpointModel {
	this := OutpointModel{}
	var transactionId string = "ef62efbc2825d3ef9ec1cf9b80506876ac077b64b11a39c8ef5e028415444dc9"
	this.TransactionId = &transactionId
	var index int32 = 0
	this.Index = &index
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *OutpointModel) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutpointModel) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *OutpointModel) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *OutpointModel) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *OutpointModel) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutpointModel) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *OutpointModel) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *OutpointModel) SetIndex(v int32) {
	o.Index = &v
}

func (o OutpointModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutpointModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	return toSerialize, nil
}

type NullableOutpointModel struct {
	value *OutpointModel
	isSet bool
}

func (v NullableOutpointModel) Get() *OutpointModel {
	return v.value
}

func (v *NullableOutpointModel) Set(val *OutpointModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOutpointModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOutpointModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutpointModel(val *OutpointModel) *NullableOutpointModel {
	return &NullableOutpointModel{value: val, isSet: true}
}

func (v NullableOutpointModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutpointModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



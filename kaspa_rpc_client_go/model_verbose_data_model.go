/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VerboseDataModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerboseDataModel{}

// VerboseDataModel struct for VerboseDataModel
type VerboseDataModel struct {
	Hash *string `json:"hash,omitempty"`
	Difficulty *float32 `json:"difficulty,omitempty"`
	SelectedParentHash *string `json:"selectedParentHash,omitempty"`
	TransactionIds []string `json:"transactionIds,omitempty"`
	BlueScore *string `json:"blueScore,omitempty"`
	ChildrenHashes []string `json:"childrenHashes,omitempty"`
	MergeSetBluesHashes []string `json:"mergeSetBluesHashes,omitempty"`
	MergeSetRedsHashes []string `json:"mergeSetRedsHashes,omitempty"`
	IsChainBlock *bool `json:"isChainBlock,omitempty"`
}

// NewVerboseDataModel instantiates a new VerboseDataModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerboseDataModel() *VerboseDataModel {
	this := VerboseDataModel{}
	var hash string = "18c7afdf8f447ca06adb8b4946dc45f5feb1188c7d177da6094dfbc760eca699"
	this.Hash = &hash
	var difficulty float32 = [4.10220452325294E12]
	this.Difficulty = &difficulty
	var selectedParentHash string = "580f65c8da9d436480817f6bd7c13eecd9223b37f0d34ae42fb17e1e9fda397e"
	this.SelectedParentHash = &selectedParentHash
	var blueScore string = "18483232"
	this.BlueScore = &blueScore
	var isChainBlock bool = false
	this.IsChainBlock = &isChainBlock
	return &this
}

// NewVerboseDataModelWithDefaults instantiates a new VerboseDataModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerboseDataModelWithDefaults() *VerboseDataModel {
	this := VerboseDataModel{}
	var hash string = "18c7afdf8f447ca06adb8b4946dc45f5feb1188c7d177da6094dfbc760eca699"
	this.Hash = &hash
	var difficulty float32 = [4.10220452325294E12]
	this.Difficulty = &difficulty
	var selectedParentHash string = "580f65c8da9d436480817f6bd7c13eecd9223b37f0d34ae42fb17e1e9fda397e"
	this.SelectedParentHash = &selectedParentHash
	var blueScore string = "18483232"
	this.BlueScore = &blueScore
	var isChainBlock bool = false
	this.IsChainBlock = &isChainBlock
	return &this
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *VerboseDataModel) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerboseDataModel) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *VerboseDataModel) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *VerboseDataModel) SetHash(v string) {
	o.Hash = &v
}

// GetDifficulty returns the Difficulty field value if set, zero value otherwise.
func (o *VerboseDataModel) GetDifficulty() float32 {
	if o == nil || IsNil(o.Difficulty) {
		var ret float32
		return ret
	}
	return *o.Difficulty
}

// GetDifficultyOk returns a tuple with the Difficulty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerboseDataModel) GetDifficultyOk() (*float32, bool) {
	if o == nil || IsNil(o.Difficulty) {
		return nil, false
	}
	return o.Difficulty, true
}

// HasDifficulty returns a boolean if a field has been set.
func (o *VerboseDataModel) HasDifficulty() bool {
	if o != nil && !IsNil(o.Difficulty) {
		return true
	}

	return false
}

// SetDifficulty gets a reference to the given float32 and assigns it to the Difficulty field.
func (o *VerboseDataModel) SetDifficulty(v float32) {
	o.Difficulty = &v
}

// GetSelectedParentHash returns the SelectedParentHash field value if set, zero value otherwise.
func (o *VerboseDataModel) GetSelectedParentHash() string {
	if o == nil || IsNil(o.SelectedParentHash) {
		var ret string
		return ret
	}
	return *o.SelectedParentHash
}

// GetSelectedParentHashOk returns a tuple with the SelectedParentHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerboseDataModel) GetSelectedParentHashOk() (*string, bool) {
	if o == nil || IsNil(o.SelectedParentHash) {
		return nil, false
	}
	return o.SelectedParentHash, true
}

// HasSelectedParentHash returns a boolean if a field has been set.
func (o *VerboseDataModel) HasSelectedParentHash() bool {
	if o != nil && !IsNil(o.SelectedParentHash) {
		return true
	}

	return false
}

// SetSelectedParentHash gets a reference to the given string and assigns it to the SelectedParentHash field.
func (o *VerboseDataModel) SetSelectedParentHash(v string) {
	o.SelectedParentHash = &v
}

// GetTransactionIds returns the TransactionIds field value if set, zero value otherwise.
func (o *VerboseDataModel) GetTransactionIds() []string {
	if o == nil || IsNil(o.TransactionIds) {
		var ret []string
		return ret
	}
	return o.TransactionIds
}

// GetTransactionIdsOk returns a tuple with the TransactionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerboseDataModel) GetTransactionIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TransactionIds) {
		return nil, false
	}
	return o.TransactionIds, true
}

// HasTransactionIds returns a boolean if a field has been set.
func (o *VerboseDataModel) HasTransactionIds() bool {
	if o != nil && !IsNil(o.TransactionIds) {
		return true
	}

	return false
}

// SetTransactionIds gets a reference to the given []string and assigns it to the TransactionIds field.
func (o *VerboseDataModel) SetTransactionIds(v []string) {
	o.TransactionIds = v
}

// GetBlueScore returns the BlueScore field value if set, zero value otherwise.
func (o *VerboseDataModel) GetBlueScore() string {
	if o == nil || IsNil(o.BlueScore) {
		var ret string
		return ret
	}
	return *o.BlueScore
}

// GetBlueScoreOk returns a tuple with the BlueScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerboseDataModel) GetBlueScoreOk() (*string, bool) {
	if o == nil || IsNil(o.BlueScore) {
		return nil, false
	}
	return o.BlueScore, true
}

// HasBlueScore returns a boolean if a field has been set.
func (o *VerboseDataModel) HasBlueScore() bool {
	if o != nil && !IsNil(o.BlueScore) {
		return true
	}

	return false
}

// SetBlueScore gets a reference to the given string and assigns it to the BlueScore field.
func (o *VerboseDataModel) SetBlueScore(v string) {
	o.BlueScore = &v
}

// GetChildrenHashes returns the ChildrenHashes field value if set, zero value otherwise.
func (o *VerboseDataModel) GetChildrenHashes() []string {
	if o == nil || IsNil(o.ChildrenHashes) {
		var ret []string
		return ret
	}
	return o.ChildrenHashes
}

// GetChildrenHashesOk returns a tuple with the ChildrenHashes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerboseDataModel) GetChildrenHashesOk() ([]string, bool) {
	if o == nil || IsNil(o.ChildrenHashes) {
		return nil, false
	}
	return o.ChildrenHashes, true
}

// HasChildrenHashes returns a boolean if a field has been set.
func (o *VerboseDataModel) HasChildrenHashes() bool {
	if o != nil && !IsNil(o.ChildrenHashes) {
		return true
	}

	return false
}

// SetChildrenHashes gets a reference to the given []string and assigns it to the ChildrenHashes field.
func (o *VerboseDataModel) SetChildrenHashes(v []string) {
	o.ChildrenHashes = v
}

// GetMergeSetBluesHashes returns the MergeSetBluesHashes field value if set, zero value otherwise.
func (o *VerboseDataModel) GetMergeSetBluesHashes() []string {
	if o == nil || IsNil(o.MergeSetBluesHashes) {
		var ret []string
		return ret
	}
	return o.MergeSetBluesHashes
}

// GetMergeSetBluesHashesOk returns a tuple with the MergeSetBluesHashes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerboseDataModel) GetMergeSetBluesHashesOk() ([]string, bool) {
	if o == nil || IsNil(o.MergeSetBluesHashes) {
		return nil, false
	}
	return o.MergeSetBluesHashes, true
}

// HasMergeSetBluesHashes returns a boolean if a field has been set.
func (o *VerboseDataModel) HasMergeSetBluesHashes() bool {
	if o != nil && !IsNil(o.MergeSetBluesHashes) {
		return true
	}

	return false
}

// SetMergeSetBluesHashes gets a reference to the given []string and assigns it to the MergeSetBluesHashes field.
func (o *VerboseDataModel) SetMergeSetBluesHashes(v []string) {
	o.MergeSetBluesHashes = v
}

// GetMergeSetRedsHashes returns the MergeSetRedsHashes field value if set, zero value otherwise.
func (o *VerboseDataModel) GetMergeSetRedsHashes() []string {
	if o == nil || IsNil(o.MergeSetRedsHashes) {
		var ret []string
		return ret
	}
	return o.MergeSetRedsHashes
}

// GetMergeSetRedsHashesOk returns a tuple with the MergeSetRedsHashes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerboseDataModel) GetMergeSetRedsHashesOk() ([]string, bool) {
	if o == nil || IsNil(o.MergeSetRedsHashes) {
		return nil, false
	}
	return o.MergeSetRedsHashes, true
}

// HasMergeSetRedsHashes returns a boolean if a field has been set.
func (o *VerboseDataModel) HasMergeSetRedsHashes() bool {
	if o != nil && !IsNil(o.MergeSetRedsHashes) {
		return true
	}

	return false
}

// SetMergeSetRedsHashes gets a reference to the given []string and assigns it to the MergeSetRedsHashes field.
func (o *VerboseDataModel) SetMergeSetRedsHashes(v []string) {
	o.MergeSetRedsHashes = v
}

// GetIsChainBlock returns the IsChainBlock field value if set, zero value otherwise.
func (o *VerboseDataModel) GetIsChainBlock() bool {
	if o == nil || IsNil(o.IsChainBlock) {
		var ret bool
		return ret
	}
	return *o.IsChainBlock
}

// GetIsChainBlockOk returns a tuple with the IsChainBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerboseDataModel) GetIsChainBlockOk() (*bool, bool) {
	if o == nil || IsNil(o.IsChainBlock) {
		return nil, false
	}
	return o.IsChainBlock, true
}

// HasIsChainBlock returns a boolean if a field has been set.
func (o *VerboseDataModel) HasIsChainBlock() bool {
	if o != nil && !IsNil(o.IsChainBlock) {
		return true
	}

	return false
}

// SetIsChainBlock gets a reference to the given bool and assigns it to the IsChainBlock field.
func (o *VerboseDataModel) SetIsChainBlock(v bool) {
	o.IsChainBlock = &v
}

func (o VerboseDataModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerboseDataModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.Difficulty) {
		toSerialize["difficulty"] = o.Difficulty
	}
	if !IsNil(o.SelectedParentHash) {
		toSerialize["selectedParentHash"] = o.SelectedParentHash
	}
	if !IsNil(o.TransactionIds) {
		toSerialize["transactionIds"] = o.TransactionIds
	}
	if !IsNil(o.BlueScore) {
		toSerialize["blueScore"] = o.BlueScore
	}
	if !IsNil(o.ChildrenHashes) {
		toSerialize["childrenHashes"] = o.ChildrenHashes
	}
	if !IsNil(o.MergeSetBluesHashes) {
		toSerialize["mergeSetBluesHashes"] = o.MergeSetBluesHashes
	}
	if !IsNil(o.MergeSetRedsHashes) {
		toSerialize["mergeSetRedsHashes"] = o.MergeSetRedsHashes
	}
	if !IsNil(o.IsChainBlock) {
		toSerialize["isChainBlock"] = o.IsChainBlock
	}
	return toSerialize, nil
}

type NullableVerboseDataModel struct {
	value *VerboseDataModel
	isSet bool
}

func (v NullableVerboseDataModel) Get() *VerboseDataModel {
	return v.value
}

func (v *NullableVerboseDataModel) Set(val *VerboseDataModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVerboseDataModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVerboseDataModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerboseDataModel(val *VerboseDataModel) *NullableVerboseDataModel {
	return &NullableVerboseDataModel{value: val, isSet: true}
}

func (v NullableVerboseDataModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerboseDataModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



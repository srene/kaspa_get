/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlockRewardResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockRewardResponse{}

// BlockRewardResponse struct for BlockRewardResponse
type BlockRewardResponse struct {
	Blockreward *float32 `json:"blockreward,omitempty"`
}

// NewBlockRewardResponse instantiates a new BlockRewardResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockRewardResponse() *BlockRewardResponse {
	this := BlockRewardResponse{}
	var blockreward float32 = 12000132
	this.Blockreward = &blockreward
	return &this
}

// NewBlockRewardResponseWithDefaults instantiates a new BlockRewardResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockRewardResponseWithDefaults() *BlockRewardResponse {
	this := BlockRewardResponse{}
	var blockreward float32 = 12000132
	this.Blockreward = &blockreward
	return &this
}

// GetBlockreward returns the Blockreward field value if set, zero value otherwise.
func (o *BlockRewardResponse) GetBlockreward() float32 {
	if o == nil || IsNil(o.Blockreward) {
		var ret float32
		return ret
	}
	return *o.Blockreward
}

// GetBlockrewardOk returns a tuple with the Blockreward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockRewardResponse) GetBlockrewardOk() (*float32, bool) {
	if o == nil || IsNil(o.Blockreward) {
		return nil, false
	}
	return o.Blockreward, true
}

// HasBlockreward returns a boolean if a field has been set.
func (o *BlockRewardResponse) HasBlockreward() bool {
	if o != nil && !IsNil(o.Blockreward) {
		return true
	}

	return false
}

// SetBlockreward gets a reference to the given float32 and assigns it to the Blockreward field.
func (o *BlockRewardResponse) SetBlockreward(v float32) {
	o.Blockreward = &v
}

func (o BlockRewardResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockRewardResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Blockreward) {
		toSerialize["blockreward"] = o.Blockreward
	}
	return toSerialize, nil
}

type NullableBlockRewardResponse struct {
	value *BlockRewardResponse
	isSet bool
}

func (v NullableBlockRewardResponse) Get() *BlockRewardResponse {
	return v.value
}

func (v *NullableBlockRewardResponse) Set(val *BlockRewardResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockRewardResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockRewardResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockRewardResponse(val *BlockRewardResponse) *NullableBlockRewardResponse {
	return &NullableBlockRewardResponse{value: val, isSet: true}
}

func (v NullableBlockRewardResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockRewardResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



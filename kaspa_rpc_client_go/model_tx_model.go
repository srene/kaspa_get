/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TxModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TxModel{}

// TxModel struct for TxModel
type TxModel struct {
	SubnetworkId *string `json:"subnetwork_id,omitempty"`
	TransactionId *string `json:"transaction_id,omitempty"`
	Hash *string `json:"hash,omitempty"`
	Mass *int32 `json:"mass,omitempty"`
	Payload *string `json:"payload,omitempty"`
	BlockHash []string `json:"block_hash,omitempty"`
	BlockTime *int32 `json:"block_time,omitempty"`
	IsAccepted *bool `json:"is_accepted,omitempty"`
	AcceptingBlockHash *string `json:"accepting_block_hash,omitempty"`
	AcceptingBlockBlueScore *int32 `json:"accepting_block_blue_score,omitempty"`
	AcceptingBlockTime *int32 `json:"accepting_block_time,omitempty"`
	Inputs []TxInput `json:"inputs,omitempty"`
	Outputs []TxOutput `json:"outputs,omitempty"`
}

// NewTxModel instantiates a new TxModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTxModel() *TxModel {
	this := TxModel{}
	return &this
}

// NewTxModelWithDefaults instantiates a new TxModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTxModelWithDefaults() *TxModel {
	this := TxModel{}
	return &this
}

// GetSubnetworkId returns the SubnetworkId field value if set, zero value otherwise.
func (o *TxModel) GetSubnetworkId() string {
	if o == nil || IsNil(o.SubnetworkId) {
		var ret string
		return ret
	}
	return *o.SubnetworkId
}

// GetSubnetworkIdOk returns a tuple with the SubnetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetSubnetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubnetworkId) {
		return nil, false
	}
	return o.SubnetworkId, true
}

// HasSubnetworkId returns a boolean if a field has been set.
func (o *TxModel) HasSubnetworkId() bool {
	if o != nil && !IsNil(o.SubnetworkId) {
		return true
	}

	return false
}

// SetSubnetworkId gets a reference to the given string and assigns it to the SubnetworkId field.
func (o *TxModel) SetSubnetworkId(v string) {
	o.SubnetworkId = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *TxModel) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *TxModel) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *TxModel) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *TxModel) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *TxModel) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *TxModel) SetHash(v string) {
	o.Hash = &v
}

// GetMass returns the Mass field value if set, zero value otherwise.
func (o *TxModel) GetMass() int32 {
	if o == nil || IsNil(o.Mass) {
		var ret int32
		return ret
	}
	return *o.Mass
}

// GetMassOk returns a tuple with the Mass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetMassOk() (*int32, bool) {
	if o == nil || IsNil(o.Mass) {
		return nil, false
	}
	return o.Mass, true
}

// HasMass returns a boolean if a field has been set.
func (o *TxModel) HasMass() bool {
	if o != nil && !IsNil(o.Mass) {
		return true
	}

	return false
}

// SetMass gets a reference to the given int32 and assigns it to the Mass field.
func (o *TxModel) SetMass(v int32) {
	o.Mass = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *TxModel) GetPayload() string {
	if o == nil || IsNil(o.Payload) {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *TxModel) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *TxModel) SetPayload(v string) {
	o.Payload = &v
}

// GetBlockHash returns the BlockHash field value if set, zero value otherwise.
func (o *TxModel) GetBlockHash() []string {
	if o == nil || IsNil(o.BlockHash) {
		var ret []string
		return ret
	}
	return o.BlockHash
}

// GetBlockHashOk returns a tuple with the BlockHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetBlockHashOk() ([]string, bool) {
	if o == nil || IsNil(o.BlockHash) {
		return nil, false
	}
	return o.BlockHash, true
}

// HasBlockHash returns a boolean if a field has been set.
func (o *TxModel) HasBlockHash() bool {
	if o != nil && !IsNil(o.BlockHash) {
		return true
	}

	return false
}

// SetBlockHash gets a reference to the given []string and assigns it to the BlockHash field.
func (o *TxModel) SetBlockHash(v []string) {
	o.BlockHash = v
}

// GetBlockTime returns the BlockTime field value if set, zero value otherwise.
func (o *TxModel) GetBlockTime() int32 {
	if o == nil || IsNil(o.BlockTime) {
		var ret int32
		return ret
	}
	return *o.BlockTime
}

// GetBlockTimeOk returns a tuple with the BlockTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetBlockTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.BlockTime) {
		return nil, false
	}
	return o.BlockTime, true
}

// HasBlockTime returns a boolean if a field has been set.
func (o *TxModel) HasBlockTime() bool {
	if o != nil && !IsNil(o.BlockTime) {
		return true
	}

	return false
}

// SetBlockTime gets a reference to the given int32 and assigns it to the BlockTime field.
func (o *TxModel) SetBlockTime(v int32) {
	o.BlockTime = &v
}

// GetIsAccepted returns the IsAccepted field value if set, zero value otherwise.
func (o *TxModel) GetIsAccepted() bool {
	if o == nil || IsNil(o.IsAccepted) {
		var ret bool
		return ret
	}
	return *o.IsAccepted
}

// GetIsAcceptedOk returns a tuple with the IsAccepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetIsAcceptedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAccepted) {
		return nil, false
	}
	return o.IsAccepted, true
}

// HasIsAccepted returns a boolean if a field has been set.
func (o *TxModel) HasIsAccepted() bool {
	if o != nil && !IsNil(o.IsAccepted) {
		return true
	}

	return false
}

// SetIsAccepted gets a reference to the given bool and assigns it to the IsAccepted field.
func (o *TxModel) SetIsAccepted(v bool) {
	o.IsAccepted = &v
}

// GetAcceptingBlockHash returns the AcceptingBlockHash field value if set, zero value otherwise.
func (o *TxModel) GetAcceptingBlockHash() string {
	if o == nil || IsNil(o.AcceptingBlockHash) {
		var ret string
		return ret
	}
	return *o.AcceptingBlockHash
}

// GetAcceptingBlockHashOk returns a tuple with the AcceptingBlockHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetAcceptingBlockHashOk() (*string, bool) {
	if o == nil || IsNil(o.AcceptingBlockHash) {
		return nil, false
	}
	return o.AcceptingBlockHash, true
}

// HasAcceptingBlockHash returns a boolean if a field has been set.
func (o *TxModel) HasAcceptingBlockHash() bool {
	if o != nil && !IsNil(o.AcceptingBlockHash) {
		return true
	}

	return false
}

// SetAcceptingBlockHash gets a reference to the given string and assigns it to the AcceptingBlockHash field.
func (o *TxModel) SetAcceptingBlockHash(v string) {
	o.AcceptingBlockHash = &v
}

// GetAcceptingBlockBlueScore returns the AcceptingBlockBlueScore field value if set, zero value otherwise.
func (o *TxModel) GetAcceptingBlockBlueScore() int32 {
	if o == nil || IsNil(o.AcceptingBlockBlueScore) {
		var ret int32
		return ret
	}
	return *o.AcceptingBlockBlueScore
}

// GetAcceptingBlockBlueScoreOk returns a tuple with the AcceptingBlockBlueScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetAcceptingBlockBlueScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.AcceptingBlockBlueScore) {
		return nil, false
	}
	return o.AcceptingBlockBlueScore, true
}

// HasAcceptingBlockBlueScore returns a boolean if a field has been set.
func (o *TxModel) HasAcceptingBlockBlueScore() bool {
	if o != nil && !IsNil(o.AcceptingBlockBlueScore) {
		return true
	}

	return false
}

// SetAcceptingBlockBlueScore gets a reference to the given int32 and assigns it to the AcceptingBlockBlueScore field.
func (o *TxModel) SetAcceptingBlockBlueScore(v int32) {
	o.AcceptingBlockBlueScore = &v
}

// GetAcceptingBlockTime returns the AcceptingBlockTime field value if set, zero value otherwise.
func (o *TxModel) GetAcceptingBlockTime() int32 {
	if o == nil || IsNil(o.AcceptingBlockTime) {
		var ret int32
		return ret
	}
	return *o.AcceptingBlockTime
}

// GetAcceptingBlockTimeOk returns a tuple with the AcceptingBlockTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetAcceptingBlockTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.AcceptingBlockTime) {
		return nil, false
	}
	return o.AcceptingBlockTime, true
}

// HasAcceptingBlockTime returns a boolean if a field has been set.
func (o *TxModel) HasAcceptingBlockTime() bool {
	if o != nil && !IsNil(o.AcceptingBlockTime) {
		return true
	}

	return false
}

// SetAcceptingBlockTime gets a reference to the given int32 and assigns it to the AcceptingBlockTime field.
func (o *TxModel) SetAcceptingBlockTime(v int32) {
	o.AcceptingBlockTime = &v
}

// GetInputs returns the Inputs field value if set, zero value otherwise.
func (o *TxModel) GetInputs() []TxInput {
	if o == nil || IsNil(o.Inputs) {
		var ret []TxInput
		return ret
	}
	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetInputsOk() ([]TxInput, bool) {
	if o == nil || IsNil(o.Inputs) {
		return nil, false
	}
	return o.Inputs, true
}

// HasInputs returns a boolean if a field has been set.
func (o *TxModel) HasInputs() bool {
	if o != nil && !IsNil(o.Inputs) {
		return true
	}

	return false
}

// SetInputs gets a reference to the given []TxInput and assigns it to the Inputs field.
func (o *TxModel) SetInputs(v []TxInput) {
	o.Inputs = v
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *TxModel) GetOutputs() []TxOutput {
	if o == nil || IsNil(o.Outputs) {
		var ret []TxOutput
		return ret
	}
	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxModel) GetOutputsOk() ([]TxOutput, bool) {
	if o == nil || IsNil(o.Outputs) {
		return nil, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *TxModel) HasOutputs() bool {
	if o != nil && !IsNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given []TxOutput and assigns it to the Outputs field.
func (o *TxModel) SetOutputs(v []TxOutput) {
	o.Outputs = v
}

func (o TxModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TxModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubnetworkId) {
		toSerialize["subnetwork_id"] = o.SubnetworkId
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.Mass) {
		toSerialize["mass"] = o.Mass
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.BlockHash) {
		toSerialize["block_hash"] = o.BlockHash
	}
	if !IsNil(o.BlockTime) {
		toSerialize["block_time"] = o.BlockTime
	}
	if !IsNil(o.IsAccepted) {
		toSerialize["is_accepted"] = o.IsAccepted
	}
	if !IsNil(o.AcceptingBlockHash) {
		toSerialize["accepting_block_hash"] = o.AcceptingBlockHash
	}
	if !IsNil(o.AcceptingBlockBlueScore) {
		toSerialize["accepting_block_blue_score"] = o.AcceptingBlockBlueScore
	}
	if !IsNil(o.AcceptingBlockTime) {
		toSerialize["accepting_block_time"] = o.AcceptingBlockTime
	}
	if !IsNil(o.Inputs) {
		toSerialize["inputs"] = o.Inputs
	}
	if !IsNil(o.Outputs) {
		toSerialize["outputs"] = o.Outputs
	}
	return toSerialize, nil
}

type NullableTxModel struct {
	value *TxModel
	isSet bool
}

func (v NullableTxModel) Get() *TxModel {
	return v.value
}

func (v *NullableTxModel) Set(val *TxModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTxModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTxModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTxModel(val *TxModel) *NullableTxModel {
	return &NullableTxModel{value: val, isSet: true}
}

func (v NullableTxModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTxModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HalvingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HalvingResponse{}

// HalvingResponse struct for HalvingResponse
type HalvingResponse struct {
	NextHalvingTimestamp *int32 `json:"nextHalvingTimestamp,omitempty"`
	NextHalvingDate *string `json:"nextHalvingDate,omitempty"`
	NextHalvingAmount *float32 `json:"nextHalvingAmount,omitempty"`
}

// NewHalvingResponse instantiates a new HalvingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHalvingResponse() *HalvingResponse {
	this := HalvingResponse{}
	var nextHalvingTimestamp int32 = 1662837270000
	this.NextHalvingTimestamp = &nextHalvingTimestamp
	var nextHalvingDate string = "2022-09-10 19:38:52 UTC"
	this.NextHalvingDate = &nextHalvingDate
	var nextHalvingAmount float32 = 155.123123
	this.NextHalvingAmount = &nextHalvingAmount
	return &this
}

// NewHalvingResponseWithDefaults instantiates a new HalvingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHalvingResponseWithDefaults() *HalvingResponse {
	this := HalvingResponse{}
	var nextHalvingTimestamp int32 = 1662837270000
	this.NextHalvingTimestamp = &nextHalvingTimestamp
	var nextHalvingDate string = "2022-09-10 19:38:52 UTC"
	this.NextHalvingDate = &nextHalvingDate
	var nextHalvingAmount float32 = 155.123123
	this.NextHalvingAmount = &nextHalvingAmount
	return &this
}

// GetNextHalvingTimestamp returns the NextHalvingTimestamp field value if set, zero value otherwise.
func (o *HalvingResponse) GetNextHalvingTimestamp() int32 {
	if o == nil || IsNil(o.NextHalvingTimestamp) {
		var ret int32
		return ret
	}
	return *o.NextHalvingTimestamp
}

// GetNextHalvingTimestampOk returns a tuple with the NextHalvingTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HalvingResponse) GetNextHalvingTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.NextHalvingTimestamp) {
		return nil, false
	}
	return o.NextHalvingTimestamp, true
}

// HasNextHalvingTimestamp returns a boolean if a field has been set.
func (o *HalvingResponse) HasNextHalvingTimestamp() bool {
	if o != nil && !IsNil(o.NextHalvingTimestamp) {
		return true
	}

	return false
}

// SetNextHalvingTimestamp gets a reference to the given int32 and assigns it to the NextHalvingTimestamp field.
func (o *HalvingResponse) SetNextHalvingTimestamp(v int32) {
	o.NextHalvingTimestamp = &v
}

// GetNextHalvingDate returns the NextHalvingDate field value if set, zero value otherwise.
func (o *HalvingResponse) GetNextHalvingDate() string {
	if o == nil || IsNil(o.NextHalvingDate) {
		var ret string
		return ret
	}
	return *o.NextHalvingDate
}

// GetNextHalvingDateOk returns a tuple with the NextHalvingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HalvingResponse) GetNextHalvingDateOk() (*string, bool) {
	if o == nil || IsNil(o.NextHalvingDate) {
		return nil, false
	}
	return o.NextHalvingDate, true
}

// HasNextHalvingDate returns a boolean if a field has been set.
func (o *HalvingResponse) HasNextHalvingDate() bool {
	if o != nil && !IsNil(o.NextHalvingDate) {
		return true
	}

	return false
}

// SetNextHalvingDate gets a reference to the given string and assigns it to the NextHalvingDate field.
func (o *HalvingResponse) SetNextHalvingDate(v string) {
	o.NextHalvingDate = &v
}

// GetNextHalvingAmount returns the NextHalvingAmount field value if set, zero value otherwise.
func (o *HalvingResponse) GetNextHalvingAmount() float32 {
	if o == nil || IsNil(o.NextHalvingAmount) {
		var ret float32
		return ret
	}
	return *o.NextHalvingAmount
}

// GetNextHalvingAmountOk returns a tuple with the NextHalvingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HalvingResponse) GetNextHalvingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.NextHalvingAmount) {
		return nil, false
	}
	return o.NextHalvingAmount, true
}

// HasNextHalvingAmount returns a boolean if a field has been set.
func (o *HalvingResponse) HasNextHalvingAmount() bool {
	if o != nil && !IsNil(o.NextHalvingAmount) {
		return true
	}

	return false
}

// SetNextHalvingAmount gets a reference to the given float32 and assigns it to the NextHalvingAmount field.
func (o *HalvingResponse) SetNextHalvingAmount(v float32) {
	o.NextHalvingAmount = &v
}

func (o HalvingResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HalvingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NextHalvingTimestamp) {
		toSerialize["nextHalvingTimestamp"] = o.NextHalvingTimestamp
	}
	if !IsNil(o.NextHalvingDate) {
		toSerialize["nextHalvingDate"] = o.NextHalvingDate
	}
	if !IsNil(o.NextHalvingAmount) {
		toSerialize["nextHalvingAmount"] = o.NextHalvingAmount
	}
	return toSerialize, nil
}

type NullableHalvingResponse struct {
	value *HalvingResponse
	isSet bool
}

func (v NullableHalvingResponse) Get() *HalvingResponse {
	return v.value
}

func (v *NullableHalvingResponse) Set(val *HalvingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHalvingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHalvingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHalvingResponse(val *HalvingResponse) *NullableHalvingResponse {
	return &NullableHalvingResponse{value: val, isSet: true}
}

func (v NullableHalvingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHalvingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



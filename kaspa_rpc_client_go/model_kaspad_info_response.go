/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KaspadInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KaspadInfoResponse{}

// KaspadInfoResponse struct for KaspadInfoResponse
type KaspadInfoResponse struct {
	MempoolSize *string `json:"mempoolSize,omitempty"`
	ServerVersion *string `json:"serverVersion,omitempty"`
	IsUtxoIndexed *bool `json:"isUtxoIndexed,omitempty"`
	IsSynced *bool `json:"isSynced,omitempty"`
	P2pIdHashed *string `json:"p2pIdHashed,omitempty"`
}

// NewKaspadInfoResponse instantiates a new KaspadInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKaspadInfoResponse() *KaspadInfoResponse {
	this := KaspadInfoResponse{}
	var mempoolSize string = "1"
	this.MempoolSize = &mempoolSize
	var serverVersion string = "0.12.2"
	this.ServerVersion = &serverVersion
	var isUtxoIndexed bool = true
	this.IsUtxoIndexed = &isUtxoIndexed
	var isSynced bool = true
	this.IsSynced = &isSynced
	var p2pIdHashed string = "36a17cd8644eef34fc7fe4719655e06dbdf117008900c46975e66c35acd09b01"
	this.P2pIdHashed = &p2pIdHashed
	return &this
}

// NewKaspadInfoResponseWithDefaults instantiates a new KaspadInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKaspadInfoResponseWithDefaults() *KaspadInfoResponse {
	this := KaspadInfoResponse{}
	var mempoolSize string = "1"
	this.MempoolSize = &mempoolSize
	var serverVersion string = "0.12.2"
	this.ServerVersion = &serverVersion
	var isUtxoIndexed bool = true
	this.IsUtxoIndexed = &isUtxoIndexed
	var isSynced bool = true
	this.IsSynced = &isSynced
	var p2pIdHashed string = "36a17cd8644eef34fc7fe4719655e06dbdf117008900c46975e66c35acd09b01"
	this.P2pIdHashed = &p2pIdHashed
	return &this
}

// GetMempoolSize returns the MempoolSize field value if set, zero value otherwise.
func (o *KaspadInfoResponse) GetMempoolSize() string {
	if o == nil || IsNil(o.MempoolSize) {
		var ret string
		return ret
	}
	return *o.MempoolSize
}

// GetMempoolSizeOk returns a tuple with the MempoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KaspadInfoResponse) GetMempoolSizeOk() (*string, bool) {
	if o == nil || IsNil(o.MempoolSize) {
		return nil, false
	}
	return o.MempoolSize, true
}

// HasMempoolSize returns a boolean if a field has been set.
func (o *KaspadInfoResponse) HasMempoolSize() bool {
	if o != nil && !IsNil(o.MempoolSize) {
		return true
	}

	return false
}

// SetMempoolSize gets a reference to the given string and assigns it to the MempoolSize field.
func (o *KaspadInfoResponse) SetMempoolSize(v string) {
	o.MempoolSize = &v
}

// GetServerVersion returns the ServerVersion field value if set, zero value otherwise.
func (o *KaspadInfoResponse) GetServerVersion() string {
	if o == nil || IsNil(o.ServerVersion) {
		var ret string
		return ret
	}
	return *o.ServerVersion
}

// GetServerVersionOk returns a tuple with the ServerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KaspadInfoResponse) GetServerVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ServerVersion) {
		return nil, false
	}
	return o.ServerVersion, true
}

// HasServerVersion returns a boolean if a field has been set.
func (o *KaspadInfoResponse) HasServerVersion() bool {
	if o != nil && !IsNil(o.ServerVersion) {
		return true
	}

	return false
}

// SetServerVersion gets a reference to the given string and assigns it to the ServerVersion field.
func (o *KaspadInfoResponse) SetServerVersion(v string) {
	o.ServerVersion = &v
}

// GetIsUtxoIndexed returns the IsUtxoIndexed field value if set, zero value otherwise.
func (o *KaspadInfoResponse) GetIsUtxoIndexed() bool {
	if o == nil || IsNil(o.IsUtxoIndexed) {
		var ret bool
		return ret
	}
	return *o.IsUtxoIndexed
}

// GetIsUtxoIndexedOk returns a tuple with the IsUtxoIndexed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KaspadInfoResponse) GetIsUtxoIndexedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUtxoIndexed) {
		return nil, false
	}
	return o.IsUtxoIndexed, true
}

// HasIsUtxoIndexed returns a boolean if a field has been set.
func (o *KaspadInfoResponse) HasIsUtxoIndexed() bool {
	if o != nil && !IsNil(o.IsUtxoIndexed) {
		return true
	}

	return false
}

// SetIsUtxoIndexed gets a reference to the given bool and assigns it to the IsUtxoIndexed field.
func (o *KaspadInfoResponse) SetIsUtxoIndexed(v bool) {
	o.IsUtxoIndexed = &v
}

// GetIsSynced returns the IsSynced field value if set, zero value otherwise.
func (o *KaspadInfoResponse) GetIsSynced() bool {
	if o == nil || IsNil(o.IsSynced) {
		var ret bool
		return ret
	}
	return *o.IsSynced
}

// GetIsSyncedOk returns a tuple with the IsSynced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KaspadInfoResponse) GetIsSyncedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSynced) {
		return nil, false
	}
	return o.IsSynced, true
}

// HasIsSynced returns a boolean if a field has been set.
func (o *KaspadInfoResponse) HasIsSynced() bool {
	if o != nil && !IsNil(o.IsSynced) {
		return true
	}

	return false
}

// SetIsSynced gets a reference to the given bool and assigns it to the IsSynced field.
func (o *KaspadInfoResponse) SetIsSynced(v bool) {
	o.IsSynced = &v
}

// GetP2pIdHashed returns the P2pIdHashed field value if set, zero value otherwise.
func (o *KaspadInfoResponse) GetP2pIdHashed() string {
	if o == nil || IsNil(o.P2pIdHashed) {
		var ret string
		return ret
	}
	return *o.P2pIdHashed
}

// GetP2pIdHashedOk returns a tuple with the P2pIdHashed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KaspadInfoResponse) GetP2pIdHashedOk() (*string, bool) {
	if o == nil || IsNil(o.P2pIdHashed) {
		return nil, false
	}
	return o.P2pIdHashed, true
}

// HasP2pIdHashed returns a boolean if a field has been set.
func (o *KaspadInfoResponse) HasP2pIdHashed() bool {
	if o != nil && !IsNil(o.P2pIdHashed) {
		return true
	}

	return false
}

// SetP2pIdHashed gets a reference to the given string and assigns it to the P2pIdHashed field.
func (o *KaspadInfoResponse) SetP2pIdHashed(v string) {
	o.P2pIdHashed = &v
}

func (o KaspadInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KaspadInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MempoolSize) {
		toSerialize["mempoolSize"] = o.MempoolSize
	}
	if !IsNil(o.ServerVersion) {
		toSerialize["serverVersion"] = o.ServerVersion
	}
	if !IsNil(o.IsUtxoIndexed) {
		toSerialize["isUtxoIndexed"] = o.IsUtxoIndexed
	}
	if !IsNil(o.IsSynced) {
		toSerialize["isSynced"] = o.IsSynced
	}
	if !IsNil(o.P2pIdHashed) {
		toSerialize["p2pIdHashed"] = o.P2pIdHashed
	}
	return toSerialize, nil
}

type NullableKaspadInfoResponse struct {
	value *KaspadInfoResponse
	isSet bool
}

func (v NullableKaspadInfoResponse) Get() *KaspadInfoResponse {
	return v.value
}

func (v *NullableKaspadInfoResponse) Set(val *KaspadInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKaspadInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKaspadInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKaspadInfoResponse(val *KaspadInfoResponse) *NullableKaspadInfoResponse {
	return &NullableKaspadInfoResponse{value: val, isSet: true}
}

func (v NullableKaspadInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKaspadInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



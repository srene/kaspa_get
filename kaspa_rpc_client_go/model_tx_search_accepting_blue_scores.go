/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TxSearchAcceptingBlueScores type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TxSearchAcceptingBlueScores{}

// TxSearchAcceptingBlueScores struct for TxSearchAcceptingBlueScores
type TxSearchAcceptingBlueScores struct {
	Gte int32 `json:"gte"`
	Lt int32 `json:"lt"`
}

type _TxSearchAcceptingBlueScores TxSearchAcceptingBlueScores

// NewTxSearchAcceptingBlueScores instantiates a new TxSearchAcceptingBlueScores object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTxSearchAcceptingBlueScores(gte int32, lt int32) *TxSearchAcceptingBlueScores {
	this := TxSearchAcceptingBlueScores{}
	this.Gte = gte
	this.Lt = lt
	return &this
}

// NewTxSearchAcceptingBlueScoresWithDefaults instantiates a new TxSearchAcceptingBlueScores object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTxSearchAcceptingBlueScoresWithDefaults() *TxSearchAcceptingBlueScores {
	this := TxSearchAcceptingBlueScores{}
	return &this
}

// GetGte returns the Gte field value
func (o *TxSearchAcceptingBlueScores) GetGte() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Gte
}

// GetGteOk returns a tuple with the Gte field value
// and a boolean to check if the value has been set.
func (o *TxSearchAcceptingBlueScores) GetGteOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Gte, true
}

// SetGte sets field value
func (o *TxSearchAcceptingBlueScores) SetGte(v int32) {
	o.Gte = v
}

// GetLt returns the Lt field value
func (o *TxSearchAcceptingBlueScores) GetLt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Lt
}

// GetLtOk returns a tuple with the Lt field value
// and a boolean to check if the value has been set.
func (o *TxSearchAcceptingBlueScores) GetLtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lt, true
}

// SetLt sets field value
func (o *TxSearchAcceptingBlueScores) SetLt(v int32) {
	o.Lt = v
}

func (o TxSearchAcceptingBlueScores) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TxSearchAcceptingBlueScores) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["gte"] = o.Gte
	toSerialize["lt"] = o.Lt
	return toSerialize, nil
}

func (o *TxSearchAcceptingBlueScores) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"gte",
		"lt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTxSearchAcceptingBlueScores := _TxSearchAcceptingBlueScores{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTxSearchAcceptingBlueScores)

	if err != nil {
		return err
	}

	*o = TxSearchAcceptingBlueScores(varTxSearchAcceptingBlueScores)

	return err
}

type NullableTxSearchAcceptingBlueScores struct {
	value *TxSearchAcceptingBlueScores
	isSet bool
}

func (v NullableTxSearchAcceptingBlueScores) Get() *TxSearchAcceptingBlueScores {
	return v.value
}

func (v *NullableTxSearchAcceptingBlueScores) Set(val *TxSearchAcceptingBlueScores) {
	v.value = val
	v.isSet = true
}

func (v NullableTxSearchAcceptingBlueScores) IsSet() bool {
	return v.isSet
}

func (v *NullableTxSearchAcceptingBlueScores) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTxSearchAcceptingBlueScores(val *TxSearchAcceptingBlueScores) *NullableTxSearchAcceptingBlueScores {
	return &NullableTxSearchAcceptingBlueScores{value: val, isSet: true}
}

func (v NullableTxSearchAcceptingBlueScores) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTxSearchAcceptingBlueScores) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Kaspa REST-API server

This server is to communicate with kaspa network via REST-API

API version: tbd
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddressesActiveRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressesActiveRequest{}

// AddressesActiveRequest struct for AddressesActiveRequest
type AddressesActiveRequest struct {
	Addresses []string `json:"addresses,omitempty"`
}

// NewAddressesActiveRequest instantiates a new AddressesActiveRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressesActiveRequest() *AddressesActiveRequest {
	this := AddressesActiveRequest{}
	return &this
}

// NewAddressesActiveRequestWithDefaults instantiates a new AddressesActiveRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressesActiveRequestWithDefaults() *AddressesActiveRequest {
	this := AddressesActiveRequest{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *AddressesActiveRequest) GetAddresses() []string {
	if o == nil || IsNil(o.Addresses) {
		var ret []string
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressesActiveRequest) GetAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *AddressesActiveRequest) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []string and assigns it to the Addresses field.
func (o *AddressesActiveRequest) SetAddresses(v []string) {
	o.Addresses = v
}

func (o AddressesActiveRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressesActiveRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	return toSerialize, nil
}

type NullableAddressesActiveRequest struct {
	value *AddressesActiveRequest
	isSet bool
}

func (v NullableAddressesActiveRequest) Get() *AddressesActiveRequest {
	return v.value
}

func (v *NullableAddressesActiveRequest) Set(val *AddressesActiveRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressesActiveRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressesActiveRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressesActiveRequest(val *AddressesActiveRequest) *NullableAddressesActiveRequest {
	return &NullableAddressesActiveRequest{value: val, isSet: true}
}

func (v NullableAddressesActiveRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressesActiveRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


